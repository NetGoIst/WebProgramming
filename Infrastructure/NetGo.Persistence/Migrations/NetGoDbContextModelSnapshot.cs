// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetGo.Persistence.Contexts;

#nullable disable

namespace NetGo.Persistence.Migrations
{
    [DbContext(typeof(NetGoDbContext))]
    partial class NetGoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("NetGo.Domain.Entities.Body", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bodies");
                });

            modelBuilder.Entity("NetGo.Domain.Entities.Element", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BodyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BodyId");

                    b.ToTable("Element");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Element");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("NetGo.Domain.Entities.H1", b =>
                {
                    b.HasBaseType("NetGo.Domain.Entities.Element");

                    b.HasDiscriminator().HasValue("H1");
                });

            modelBuilder.Entity("NetGo.Domain.Entities.P", b =>
                {
                    b.HasBaseType("NetGo.Domain.Entities.Element");

                    b.HasDiscriminator().HasValue("P");
                });

            modelBuilder.Entity("NetGo.Domain.Entities.Element", b =>
                {
                    b.HasOne("NetGo.Domain.Entities.Body", null)
                        .WithMany("Elements")
                        .HasForeignKey("BodyId");
                });

            modelBuilder.Entity("NetGo.Domain.Entities.Body", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
